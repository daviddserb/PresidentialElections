Am folosit Node.js pentru:
- e mediul in care rulezi. Poti sa te gandesti la browser ca fiind un fel de node.js.
Comparatia nu e 100% exacta, dar te ajuta sa intelegi la ce ma refer cand spun mediu.

Am folosit Express.js pentru:
- ? ...?

- express app. generator:
	-> npm install -g express-generator
	-> express (to generate the skeleton: folders(bin, public, routes, views) and files (app.js, package.json))

-> npm install (node_modules, package-lock.json)

-> npm install nodemon --global (to restart server every save)
-> go to package.json -> scripts -> start -> change from node to nodemon

-> npm install mysql (for database)

-> npm install ejs (because it was initialized with jade)

for pop-up messages:
-> npm install cookie-session
-> npm install connect-flash

-> npm start (the port of the server is in bin folder in www)

	MySqlWorkbench:
- In MySQL Connections, in the folder testdb with the password: password.
- right-click on the free space in Schemas -> Create Schema -> Set a Name -> Apply

	Host on Heroku:

~ heroku create presidential--elections -> presidential--elections = numele aplicatiei pe care il creezi pe site

! Pt. ca nu mai lucrezi pe "localhost" ci o hostezi, trebuie sa ii faci o baza de date separata:
Click pe aplicatie -> Resources -> Add-ons -> JawsDB MySQL -> click pe JawsDB MySQL si iei datele (Host, Username, etc...) si faci cu ele un nou server in MySQL Workbench.

~ git init -> initialize the git repository

~ git add . -> add all your folders and files
~ git commit -m "initial" -> commit them to the local master branch

~ heroku login (you need to have heroku cli installed)

~ heroku git:remote -a presidential--elections
~ git push heroku master -> push all the code from local master branch to heroku application

https://presidential--elections.herokuapp.com/